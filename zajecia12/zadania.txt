package pl.imiajd.korpus;
import java.util.LinkedList;

public class zadanie1 {

    public static void main(String[] args) {
	LinkedList<String> nazwiska = new LinkedList<>();
    nazwiska.add("Adamowicz");
    nazwiska.add("Nowak");
    nazwiska.add("Dawidowski");
    nazwiska.add("Mucha");
    nazwiska.add("Abramski");
    nazwiska.add("Chmiel");
    System.out.println(nazwiska);
    redukuj(nazwiska, 2);
    System.out.println(nazwiska);
    }

    public static void redukuj(LinkedList<String> pracownicy, int n){
        int counter = 0;
        for(int i=0; i<pracownicy.size();i++){
            counter += 1;
            if(counter == n){
                pracownicy.remove(i);
                counter = 1;
            }
        }
    }
}

---------------------------------------------------------------------------------------------------

package pl.imiajd.korpus;
import java.util.LinkedList;

public class zadanie2 {

    public static void main(String[] args) {
        LinkedList<String> nazwiska = new LinkedList<>();
        nazwiska.add("Adamowicz");
        nazwiska.add("Nowak");
        nazwiska.add("Dawidowski");
        nazwiska.add("Mucha");
        nazwiska.add("Abramski");
        nazwiska.add("Chmiel");
        System.out.println(nazwiska);
        redukuj(nazwiska, 3);
        System.out.println(nazwiska);
        LinkedList<Integer> liczby = new LinkedList<>();
        liczby.add(1);
        liczby.add(2);
        liczby.add(3);
        liczby.add(4);
        System.out.println(liczby);
        redukuj(liczby, 2);
        System.out.println(liczby);
    }

    public static <T> void redukuj(LinkedList<T> pracownicy, int n){
        int counter = 0;
        for(int i=0; i<pracownicy.size();i++){
            counter += 1;
            if(counter == n){
                pracownicy.remove(i);
                counter = 1;
            }
        }
    }
}

---------------------------------------------------------------------------------------------------

package pl.imiajd.korpus;
import java.util.LinkedList;

public class zadanie3 {

    public static void main(String[] args) {
        LinkedList<String> nazwiska = new LinkedList<>();
        nazwiska.add("Adamowicz");
        nazwiska.add("Nowak");
        nazwiska.add("Dawidowski");
        nazwiska.add("Mucha");
        nazwiska.add("Abramski");
        nazwiska.add("Chmiel");
        System.out.println(nazwiska);
        odwroc(nazwiska);
        System.out.println(nazwiska);
    }

    public static void odwroc(LinkedList<String> lista){
        for(int i=0, j = lista.size()-1; i<j; i++){
            lista.add(i, lista.remove(j));
        }
    }
}

---------------------------------------------------------------------------------------------------

package pl.imiajd.korpus;

import java.util.LinkedList;

public class zadanie4 {

    public static void main(String[] args) {
        LinkedList<String> nazwiska = new LinkedList<>();
        nazwiska.add("Adamowicz");
        nazwiska.add("Nowak");
        nazwiska.add("Dawidowski");
        nazwiska.add("Mucha");
        nazwiska.add("Abramski");
        nazwiska.add("Chmiel");
        System.out.println(nazwiska);
        odwroc(nazwiska);
        System.out.println(nazwiska);
        LinkedList<Integer> liczby = new LinkedList<>();
        liczby.add(1);
        liczby.add(2);
        liczby.add(3);
        liczby.add(4);
        System.out.println(liczby);
        odwroc(liczby);
        System.out.println(liczby);
    }

    public static <T> void odwroc(LinkedList<T> lista){
        for(int i=0, j = lista.size()-1; i<j; i++){
            lista.add(i, lista.remove(j));
        }
    }
}

---------------------------------------------------------------------------------------------------

package pl.imiajd.korpus;

import java.util.Scanner;
import java.util.Stack;

public class zadanie5 {
    public static void main(String[] args){
        Scanner scanner = new Scanner(System.in);
        Stack<String> stack = new Stack<>();
        String s = scanner.nextLine();
        StringBuffer end = new StringBuffer();
        String[] superSplit = s.split("[.]");
        for(int j=0;j<superSplit.length;j++) {
            StringBuffer sb = new StringBuffer();
            String[] split = superSplit[j].split(" ");
            for (int i = 0; i < split.length; i++) {
                stack.add(split[i]);
            }
            for (int i = 0; i < split.length; i++) {
                sb.append(stack.pop());
                if (i == 0) {
                    String temp = sb.substring(0, 1).toUpperCase();
                    sb.replace(0, 1, temp);
                }
                if (i == split.length - 1) {
                    String temp = sb.substring(1, sb.length()).toLowerCase();
                    sb.replace(1, sb.length(), temp);
                    if(j == 0) {
                        sb.append(".");
                    }
                    else{
                        sb.replace(sb.length()-1, sb.length(), ".");
                    }
                }
                sb.append(" ");
            }
            end.append(sb);
        }
        System.out.println(end);

    }
}

---------------------------------------------------------------------------------------------------

package pl.imiajd.korpus;

import java.util.Stack;

public class zadanie6 {
    public static void main(String[] args){
        Stack<Integer> stack = new Stack<>();
        int number = 2015;
        while(number>0){
            stack.add(number%10);
            number = number/10;
        }
        while(stack.isEmpty() != true)
        System.out.println(stack.pop());
    }
}

---------------------------------------------------------------------------------------------------

package pl.imiajd.korpus;

public class zadanie7 {
    public static void main(String[] args){
        int n = 30;
        boolean pierwsze[] = new boolean[n+1];
        for(int i=0;i<=n;i++)
            pierwsze[i] = true;
        for(int i = 2; i*i <=n; i++){
            if(pierwsze[i] == true) {
                for (int j = i * i; j <= n; j += i)
                    pierwsze[j] = false;
            }
        }
        for(int i=2; i<=n; i++){
            if(pierwsze[i] == true)
                System.out.print(i+" ");
        }
    }
}